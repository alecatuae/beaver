# Beaver v2.0 Changelog

All notable changes to the Beaver project version 2.0 will be documented in this file.

## [Unreleased]

### Added
- New GraphQL schema with support for Environments, ComponentInstances, Teams, ADR participants, roadmap items, and glossary terms
- New enumeration types: ImpactLevel, GlossaryStatus, and LogLevel
- Migration scripts for automatic data migration from v1.x to v2.0:
  - Database schema migration script for MariaDB
  - Data migration script for creating environments, teams and instances
  - Neo4j synchronization script to keep graph database in sync
  - References update script to fix and enhance entity relationships
- Support for environments (development, homologation, production)
- Component instances per environment
- Team-based organization
- ADR participants model (owner, reviewer, consumer)
- Updated relationship mapping in Neo4j
- GraphQL resolvers for new entities (ComponentInstance, ADRParticipant, ADRComponentInstance)
- Queries and mutations for component instances, ADR participants, and impacts on instances
- Migration scripts for data compatibility between v1 and v2
- Enhanced Neo4j integration with new node types and relationships
- Automatic Neo4j synchronization via Prisma middleware
- Integrity validation and automatic repair for Neo4j graph
- Neo4j CLI tool for v2.0 entity management and synchronization
- Comprehensive API documentation with migration guide and compatibility information
- Expanded test suite with coverage for all new v2.0 features:
  - Environment CRUD tests
  - Team and Team Member management tests
  - ADR Participant validation tests
  - API compatibility and backward compatibility tests
- Frontend implementation checklist with detailed steps for upgrading components, types, queries, and UI elements
- Implementação completa dos novos tipos para Environment, Team, TeamMember, ComponentInstance e ADRParticipant em src/types/graphql.ts, incluindo documentação com referências ao esquema do banco de dados
- Adicionados novos filtros (TeamFilter, EnvironmentFilter) e tipos de resposta paginada (TeamsResponse, EnvironmentsResponse, ComponentInstancesResponse)
- Expandidos os tipos de entrada (inputs) para suportar novos campos nas entidades da v2.0
- Atualização de tipos Component e ADR com novas relações e campos introduzidos na v2.0, incluindo suporte a múltiplos participantes, impacto em ambientes específicos e validação temporal
- Melhorias nos tipos ADRInput e ComponentInput para suportar termos do glossário, tags e relacionamentos entre entidades
- Expansão dos filtros GraphQL para permitir consultas mais granulares por ambiente, time e papel de participante
- Verificação da compatibilidade de tipagem com hooks personalizados existentes e componentes que utilizam os tipos atualizados
- Implementação de queries e mutations para Environments (GET_ENVIRONMENTS, GET_ENVIRONMENT, CREATE_ENVIRONMENT, UPDATE_ENVIRONMENT, DELETE_ENVIRONMENT)
- Implementação de queries e mutations para ComponentInstances (GET_COMPONENT_INSTANCES, GET_COMPONENT_INSTANCE, CREATE_COMPONENT_INSTANCE, UPDATE_COMPONENT_INSTANCE, DELETE_COMPONENT_INSTANCE)
- Adição de query específica para buscar instâncias por ambiente (GET_COMPONENT_INSTANCES_BY_ENVIRONMENT)
- Criação de interfaces TypeScript para EnvironmentType, EnvironmentInput, ComponentInstanceType e ComponentInstanceInput
- Implementação de queries e mutations para Teams (GET_TEAMS, GET_TEAM, CREATE_TEAM, UPDATE_TEAM, DELETE_TEAM)
- Implementação de mutations para gerenciamento de membros de times (ADD_TEAM_MEMBER, REMOVE_TEAM_MEMBER)
- Adição de query auxiliar para listar usuários que não pertencem a um time específico (GET_USERS_NOT_IN_TEAM)
- Criação de interfaces TypeScript para TeamType, TeamInput, TeamMemberType e TeamMemberInput
- Atualização de queries de componentes (GET_COMPONENTS, GET_COMPONENT) para incluir novas relações com times, instâncias e termos do glossário
- Ampliação da query GET_GRAPH_DATA para suportar filtragem por ambiente e time 
- Expansão das interfaces ComponentType e ComponentInput com novos campos para suporte à validação temporal, associação a times e rastreabilidade de atualizações
- Implementação de queries e mutations para ADRs com suporte ao novo modelo de participantes múltiplos (GET_ADRS, GET_ADR, GET_ADR_BY_COMPONENT, GET_ADR_BY_ENVIRONMENT, GET_PENDING_APPROVAL_ADRS)
- Criação de queries específicas para ADRs filtrados por componente, ambiente e aprovações pendentes
- Implementação de mutations para gerenciamento de participantes de ADRs (ADD_ADR_PARTICIPANT, UPDATE_ADR_PARTICIPANT, REMOVE_ADR_PARTICIPANT, APPROVE_ADR)
- Adição de mutations para associar componentes e instâncias a ADRs com diferentes níveis de impacto
- Suporte para relacionamentos entre ADRs (relacionados e substituídos) através de mutations específicas (ADD_RELATED_ADR, REMOVE_RELATED_ADR, SET_SUPERSEDED_ADR)
- Criação de interfaces TypeScript para ADRType, ADRParticipantType, ADRInput, ADRParticipantInput e ADRFilter
- Separação lógica do código GraphQL relacionado a ADRs em arquivo dedicado (graphql-adr.ts)

### Changed
- Updated Prisma schema with new enums and model refinements
- Changed ADR model's "description" field to "decision"
- Modified impactLevel in ADR_ComponentInstance to use enum instead of string
- Updated Log model to use LogLevel enum for level field
- Changed GlossaryTerm status to use GlossaryStatus enum with default value 'DRAFT'
- Modified Prisma schema to support new entity relationships
- ADR model now supports multiple participants with different roles
- ADRs now reference specific component instances instead of just components
- Updated TypeScript types for GraphQL schema
- RoadmapType moved from enum to database table
- Improved error handling with standardized error codes

### Fixed
- N/A
- Issue with component relationships in Neo4j
- Data consistency between MariaDB and Neo4j

### Security
- Added role-based permissions for instance management
- Enhanced validation for ADR ownership changes

## [2.0.0] - YYYY-MM-DD (Not released yet)

Initial release of Beaver v2.0 