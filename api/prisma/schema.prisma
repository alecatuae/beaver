// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  GUEST
}

enum ComponentStatus {
  ACTIVE
  INACTIVE
  DEPRECATED
}

enum ADRStatus {
  PROPOSED
  ACCEPTED
  REJECTED
}

enum RoadmapType {
  FEATURE
  BUGFIX
  IMPROVEMENT
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String   @map("password_hash")
  email        String   @unique
  role         Role     @default(USER)
  createdAt    DateTime @default(now()) @map("created_at")
  logs         Log[]    @relation()

  @@map("User")
}

model Team {
  id          Int      @id @default(autoincrement())
  name        String
  description String?  @db.Text
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("Team")
}

model Category {
  id          Int         @id @default(autoincrement())
  name        String
  description String?     @db.Text
  image       Bytes?
  createdAt   DateTime    @default(now()) @map("created_at")
  components  Component[]

  @@map("Category")
}

model Component {
  id          Int             @id @default(autoincrement())
  name        String
  description String?         @db.Text
  status      ComponentStatus
  categoryId  Int?            @map("category_id")
  createdAt   DateTime        @default(now()) @map("created_at")
  tags        ComponentTag[]
  category    Category?       @relation(fields: [categoryId], references: [id])

  @@map("Component")
}

model ADR {
  id          Int       @id @default(autoincrement())
  title       String
  decision    String    @db.Text
  status      ADRStatus
  createdAt   DateTime  @default(now()) @map("created_at")
  tags        ADRTag[]

  @@map("ADR")
}

model RoadmapItem {
  id          Int           @id @default(autoincrement())
  title       String
  description String?       @db.Text
  type        RoadmapType
  createdAt   DateTime      @default(now()) @map("created_at")

  @@map("RoadmapItem")
}

model Log {
  id        Int      @id @default(autoincrement())
  userId    Int?     @map("user_id")
  action    String
  timestamp DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])

  @@map("Log")
}

model GlossaryTerm {
  id         Int    @id @default(autoincrement())
  term       String @unique
  definition String @db.Text

  @@map("GlossaryTerm")
}

model ComponentTag {
  id          Int       @id @default(autoincrement())
  componentId Int?      @map("component_id")
  tag         String
  component   Component? @relation(fields: [componentId], references: [id])

  @@map("ComponentTag")
}

model ADRTag {
  id     Int    @id @default(autoincrement())
  adrId  Int?   @map("adr_id")
  tag    String
  adr    ADR?   @relation(fields: [adrId], references: [id])

  @@map("ADRTag")
} 